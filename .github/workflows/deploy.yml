# trigger this workflow when create a release manually
#
# steps:
#   setup ssh on runner
#   scp .deploy_scripts folder to user@host:~
#   run .deploy_scripts/deploy_dockerhub_image_to_transparent_singularity_on_remote.sh on remote
#   test deploy
#
# require: github secretes
#    DOCKERHUB_USERNAME
#    DOCKERHUB_PASSWORD
#    REMOTE_DEPLOY_HOST
#    REMOTE_DEPLOY_USER
#    REMOTE_DEPLOY_SSH_KEY
#    REMOTE_DEPLOY_MODULES_PATH
#    REMOTE_DEPLOY_CONTAINERS_PATH
#    REMOTE_DEPLOY_SINGULARITY_VERSION
#      note:REMOTE_DEPLOY_SSH_KEY is private key, the paired public key should be on REMOTE_HOST

name: deploy_to_cc_and_test
on:
  release:
    types: [published]
jobs:
  deploy_to_cc:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: get repo name, tag verion 
        run: |
          echo ::set-env name=REPO_NAME::$(echo "${GITHUB_REPOSITORY}" | cut -d / -f 2)
          echo ::set-env name=TAG_VERSION::${GITHUB_REF:10}
    
      - name: docker push tag version
        run: |
          # ${GITHUB_REPOSITORY}:latest was pushed by test.yml, there is no tag info at that number
          docker pull ${GITHUB_REPOSITORY}:latest
          docker tag ${GITHUB_REPOSITORY}:latest ${GITHUB_REPOSITORY}:${TAG_VERSION}
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push ${GITHUB_REPOSITORY}:${TAG_VERSION}

      - name: deploy to cc
        run: |
          # setup runner's ssh
          mkdir -p ~/.ssh
          echo "${{ secrets.REMOTE_DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan ${{ secrets.REMOTE_DEPLOY_HOST }} >> ~/.ssh/known_hosts
          
          scp -r .deploy_scripts ${{ secrets.REMOTE_DEPLOY_USER }}@${{ secrets.REMOTE_DEPLOY_HOST }}:~

          # deploy  
          ssh ${{ secrets.REMOTE_DEPLOY_USER }}@${{ secrets.REMOTE_DEPLOY_HOST }} "bash -s" -- < .deploy_scripts/deploy_dockerhub_image_to_transparent_singularity_on_remote.sh ${REMOTE_DEPLOY_SINGULARITY_VERSION} ${REMOTE_DEPLOY_MODULES_PATH} ${REMOTE_DEPLOY_CONTAINERS_PATH} ${REPO_NAME} ${TAG_VERSION} "docker://${GITHUB_REPOSITORY}:latest"  

      - name: test deploy
        run: |
          ssh ${{ secrets.REMOTE_DEPLOY_USER }}@${{ secrets.REMOTE_DEPLOY_HOST }} "module load singularity/${REMOTE_DEPLOY_SINGULARITY_VERSION} && module load ${REPO_NAME}/latest && binary"
